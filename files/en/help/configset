= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
configset listname variable = [value]
configset listname variable <<TAG
[value]
TAB
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
listname, required, is an email list at this site (or "GLOBAL")
variable, required, is one "configset" item
value, if specified, replaces the old variable setting (null may be OK)
<<TAG, if specified, provides more than one line for value (here file)
= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

NOTE: The list of possible configset variables is in "help topics".

Only savvy list administrators will need to know what follows...
and if you just want a brief description of all the configset options
currently in effect for your list, you can send the command
  configshow YOUR_LIST 
to the server, substituting the name of your mailing list for YOUR_LIST.

Configedit runs only from the mj_shell command line, and displays the
configshow output in an editor: your changes will be automatically accepted
as configset commands when you save them and exit the editor. Configdefault
causes a variable to track the software defaults, and is not always the
same as setting the variable to a null value.

The configset command sets a variable to a given value.  A single value 
can be specified directly on the command line after an equals sign, and 
that value can sometimes be undefined, if which case nothing appears
after the "=".

Unless the "= value" form of configset is used, one or more separate
lines of data must be supplied as the new variable's value.  For
example, to store two owners with the list called MYLIST:
configset MYLIST owners <<ENDOWNERS
joe@nowhere.com
mary@elsewhere.com
ENDOWNERS

This is called a "here document", as explained in "help commands".
Keep in mind that between the tags ("ENDOWNERS" in the example above)
lines starting with dashes are special but the comment character
loses its meaning.

Some variables allow patterns or regular expressions as data fields,
and you should review "help patterns" for an explanation of how
Majordomo and Perl interpret these fields.

Some variables require a "boolean" value, as indicated in the
appropriate variable's help file by "Data Type: bool". You can
use "yes", "y", or "1" to enable such a variable, and you can
use "no", "n", or "0" to disable it.

The value will be syntax-checked against the allowable values for the
given variable. Once it has been set to any value, a variable can only
be unset with the 'configdefault' command. Setting to null is not same
as setting to the default value!

The 'default password' command can make it much easier to submit several
configset commands at once. The 'configshow' and 'configshow-comments'
commands are how you find out the current settings and get hints for
other ways to set variables. The response from configshow is in such a
form (namely configset commands) that it can be fed back to Majordomo
verbatim. You will need to put a "default password" line before most
configshow outputs before using them as configset commands since they
are altering the list and require the list password. You can review
"help default" and "help passwords" for more details.

Note also that only the variables that can be seen by the current
authorization level will be returned.  This means that with no
authentication at all, a small list of variables will still be visible
(though of course they cannot be modified). Finally, note that not
all per-list variables can be modified by the list owner - some
require global priviliges.

Finally, note that not all per-list variables can be modified by the
list owner. Some require global privileges. (By default, these
variables include archive_dir, bounce_probe_frequency, debug, 
default_language, delivery_rules, dup_lifetime, filedir, file_search, 
file_share, token_lifetime, and token_remind.)

Refer to the help file for each configset variable for about passwords
and visibility.  More syntax and usage information about each configset
variable, including the list of possible values, who can change it, etc,
is in the corresponding help file, such as "help configset which_access".

There no explanation here of WHY a configset might be needed or how
they interact with each other. For that type of information, send
"help admin" to $MJ

For syntax or option information for each variable, send
   help configset VARIABLE
to $MJ

Note that "configset GLOBAL variable" sets values for the entire site,
while "configset listname variable" sets values for a single list.
In some cases, GLOBAL values can be over-ridden by setting the same
variable to a different value for a given list. In other cases, the
GLOBAL pseudo-list has different variables: these cases will be
indicated by the help files. There are four variables for which the
GLOBAL settings are combined with the list's settings. They are
admin_body,  admin_headers, taboo_body, and taboo_headers.

For a complete list of variables that can be altered with the configset
or configedit commands, or reset with the configdefault commands (or can
be viewed with the configshow command), send this to the server:
   help topics

See Also:
   help commands      (for syntax of all commands, and 'here documents')
   help configedit    (to display/set the variable from a shell prompt)
   help configshow    (to display the variable's current value)
   help configdefault (to have the variable track the default value)
   help patterns      (for simple and complex regular expressions)
   help topics        (for a complete list of configset variables)

For a list of all help topics send this one-line message
   help topics
to the server at $MJ
