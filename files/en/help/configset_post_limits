= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
configset listname post_limits <<TAG
[VALUE LINES]
TAG
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Default Value : no default
Data Type     : limits
Variable Group: resend
Password Notes: Visible only with password. 
= = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

EXAMPLE:
configset listname post_limits <<ENDTAG
/joe\@example.com/ |      |
/example.com/      | 3/20 | 5/3d12h,10/1m
ENDTAG


The "post_limits" variable controls the per-address or per-domain limits
for posting messages to a list. The format of each line is:
  pattern | soft_limit_conditions[,more] | hard_limit_conditions[,more]
The pattern will be matched against the e-mail address of the author of
the message. The conditions will be applied if the pattern matches.

See "help patterns" for details on regular expressions.

The two required conditions determine the "soft" and "hard" limits,
respectively. Each set of conditions is a comma-separated list of ratios
and/or frequencies, and if an address matching the pattern has posted
too many times a hard or soft limit will be applied. Exceeding a soft
limit causes the list owner to be consulted by default, while exceeding
a hard limit causes the post to be denied by default. Hard limits take
precedence, and what happens when either kind of limit is reached can
be controlled by the list owner (see "help configset access_rules").

NOTE: If the conditions are null, as in the first line of the example
above, the matching address can be exempted from the remaining rules.
The first pattern to match stops the search, and later patterns will
not operate on the same address. When a pattern matches, the full
address against which it matched is stored for later checking. Two
addresses matching the same pattern do NOT contribute to satisfying
the same condition, each address is tallied separately.

The format of post_limits is a series of lines containing a pattern,
a comma-separated list of soft limits, and a comma-separated list of
hard limits.

Conditions are expressed as ratios (the number of posts out of a group
of posts), or frequencies (the number of posts in a period of time). For
example, "3/10" means three messages out of the last ten messages, and
"5/1w" means five messages in the last week. The number to the left of
the slash is always the number of posts to be counted, the field on
the right of the slash has the format shown in the "Time Period" section
of "help times". If the field to the right of the slash is just an
integer, it represents the number of posts. If it is an integer followed
by a letter, it represents a period of time. For example, "5/10" and
"5/3d" are both valid conditions.

Note that a limit of 3/10 (3 out of the last 10) would be exceeded if
not 3 but 4 or more out of 10 messages were posted from the same address.
The number you specify is the number allowable, any more are limited.

For the example above, all example.com addresses OTHER than
"joe@example.com" would be soft limited to 3 messages out of the
last 20 (the list owner would be consulted if that percentage were
exceeded), and hard limited to 5 in the last 3.5 days or 10 in the
last month (the attempted post would be denied without bothering the
list owner). Joe is exempt because testing terminates with the first
matched pattern and there are no conditions to execute.

There is a "post" trigger to expire data from the "posts" database.
The post data has a lifetime twice that of the dup_lifetime setting, at
the moment, so make sure your conditions are no longer than twice the
duplicate message database lifespan (see "help configset dup_lifetime").


See Also:
   help patterns
   help times
   help configset access_rules
   help configset dup_lifetime
   help configset latchkey_lifetime
   help configset log_lifetime
   help configset session_lifetime
   help configset token_lifetime
   help configset triggers

For a list of all help topics send this one-line message
   help topics
to the server at $MJ
