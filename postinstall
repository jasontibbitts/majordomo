# Post-installation script for Majordomo

# Basic functions:
#   1. Create the list hierarchy if necessary.
#   2. Make sure the permissions and ownerships are proper.
#   3. Convert 1.x lists.
#   (etc.  Perhaps spit out aliases?)

use DirHandle;
use Data::Dumper;
require "setup/query_util.pl";
require "setup/install_util.pl";
require "setup/setup_func.pl";

# We call mj_shell (which we make sure has the right permissions) to do the
# dirty work; it would be possible to include the routines directly, but
# this makes sure that everything was installed correctly.  It's better to
# bomb here than to let a bad installation slip by.

$config = eval { require ".mj_config" };
die "Can't do postinstall unless Makefile.PL has been run!"
  unless $config;

#@dirs = (); %files = (); # Silence warning.
# die "Can't get file index, $!"
#   unless eval { require "files/INDEX.pl" };

# Pull some variables from the environment 
$ask   = $ENV{ASK};
$skip  = $ENV{SKIP};
$verb  = $ENV{VERBOSE};
$quiet = $ENV{QUIET};
$| = 1;

# List of script files to be installed.
@sidscripts = (qw(mj_resend mj_shell mj_email mj_confirm));
@scripts = (qw(mj_trigger));

$msg2 = <<EOM;

The installation can do some basic global configuration using the questions
 answered before installation began.

If you do not do this, the rest of the installation may not proceed
 correctly, since the global password needs to be set in order for this
 program to make configuration changes.

Do basic global configuration now?
EOM

set_script_perms(\@sidscripts, \@scripts);

if ($config->{cgi_bin}) {
  copy_file('mj_confirm', "$config->{install_dir}/bin",
	    $config->{cgi_bin}, $config->{cgi_link});
}

# Create list directories and such
create_dirs($config->{'lists_dir'},
	    scalar getpwnam($config->{'uid'}),
	    scalar getgrnam($config->{'gid'}),
	    $config->{'umask'},
	    $config->{'domains'},
	    $config->{'tmpdir'},
	   );

# Install response files
install_response_files();

# Make the site config
do_site_config();

# Configure a few global parameters
if (!$skip && (!$ask || get_bool($msg2))) {
  for my $i (@{$config->{'domains'}}) {
    do_default_config($i);
    do_config($i);
  }
}

# Convert lists if desired

# Give some basic MTA configuration
if (!$skip && -t STDIN) {
#  print "\nSome basic configuration information:\n";
  my $nhead = 0;
  for my $i (@{$config->{'domains'}}) {
    suggest_mta($i, $nhead);
    $nhead = 1;
  }
}

if ($config->{sendmail_make_symlinks}) {
  print "Making symlinks in $config->{sendmail_symlink_location}";
  for my $i (@{$config->{'domains'}}) {
    make_alias_symlinks($i, $config->{sendmail_symlink_location});
    &dot;
  }
  print ".ok\n";
}

if (!$skip && !$quiet && -t STDIN) {
  print <<"EOM";

Please add the following entries to the $config->{'uid'}
account\'s crontab (not to the crontab of root or any other user).
EOM
}
open OUT, ">$config->{install_dir}/majordomo.crontab" or
  die "Can't open sample crontab file, $!";
print OUT <<EOM;
# This is a set of sample crontab entries.
EOM
  
my $ct;
for my $i (@{$config->{'domains'}}) {
  $ct = suggest_crontab($i);
  print $ct if -t STDIN && (!$skip && !$quiet);
  print OUT $ct;
}

close OUT;
chown (scalar getpwnam($config->{'uid'}),
       scalar getgrnam($config->{'gid'}),
       "$config->{install_dir}/majordomo.crontab") or
  die "Can't chown $config->{install_dir}/majordomo.crontab, $!";
chmod (0755, "$config->{install_dir}/majordomo.crontab") or
  die "Can't chmod $config->{install_dir}/majordomo.crontab, $!";

exit;

$verb = 0; # Quiet warning

1;
#
### Local Variables: ***
### cperl-indent-level:2 ***
### End: ***
