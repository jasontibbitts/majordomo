#!/usr/bin/perl -wT
BEGIN {
#  $::BINDIR = "/path/to/bin";
#  $::LIBDIR = "/path/to/lib";
#  $::LISTDIR= "/path/to/lists";
  $::TMPDIR = "/tmp/mj";
#  $::WTMPDIR= "/tmp";
  $::UMASK  = "007";
  $::UID    = "baduid";
  $::GID    = "badgid";
#  $Exporter::Verbose = 1;
#  $AutoLoader::Verbose = 1;
#  $AutoLoader::Notruncate = 1;
  $SIG{__WARN__} = sub {print STDERR "--== $_[0]"};

  # Redirect standard error output.
#  if (! -t STDERR) {
#    open (STDERR, ">>$::TMPDIR/mj_enqueue.debug");
#  }

  # Croak if install was botched
  die("Not running as UID $::UID") unless $> == $::UID;
  die("Not running as GID $::GID") unless $) == $::GID;

}

use Socket;
use Getopt::Long;
use strict;
my (%opts, $msg, $ok, $rendezvous, $time);

umask oct($::UMASK);
$ENV{PATH} = '';

Getopt::Long::Configure("bundling");
GetOptions(\%opts, 't=i');

$time = $opts{'t'} || 0;
$time = 0 if ($time < 0);

$rendezvous = "$::TMPDIR/mj_queueserv.sock";
unless (socket(SOCK, PF_UNIX, SOCK_STREAM, 0)) {
  print "Couldn't create socket: $!";
  exit 0;
}

if ($ok = connect(SOCK, sockaddr_un($rendezvous))) {
  # Connected to the server; 
  $msg = "quit $time\n";
  syswrite(SOCK, $msg, length($msg));
  print "The queue server has been asked to shut down in $time seconds.\n";
}
else {
  print "Unable connect to server; perhaps it is not running.\n";
}

exit;

=head1 NAME

mj_shutdown - Ask a running queue server to exit.

=head1 SYNOPSIS

B<mj_shutdown>

=head1 DESCRIPTION

The mj_shutdown program sends a message to the mj_queueserv program
which asks the queue server to exit.  The mj_queueserv process is not
killed.  Any existing queue runners are allowed to finish (They will
notice that the queue server has stopped running when they request more
work.)

The mj_shutdown program must be run by the majordomo user.

=head2 Options

The mj_shutdown program supports the following command line option:

=over 4

=item B<-t> I<delay>

Normally, the queue server will be asked to shut down immediately.
If this option is used, the queue server will wait for I<delay>
seconds before exiting.  This option is useful for delaying message
processing while the software is being upgraded.

=head1 COPYRIGHT

Copyright (c) 1999, 2001 Jason Tibbitts for The Majordomo Development
Group.  All rights reserved.

This program is free software; you can redistribute it and/or modify it
under the terms of the license detailed in the LICENSE file of the
Majordomo2 distribution.

This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the Majordomo2 LICENSE file for more
detailed information.

=cut

#
### Local Variables: ***
### mode:cperl ***
### cperl-indent-level:2 ***
### End: ***
